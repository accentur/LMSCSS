Inheritance has low specificity even < than browser defaults.
Inheritance works on fonts and others.....but there are excceptions.
Complete MDN CSS Reference (don't learn this by heart!): https://developer.mozilla.org/en-US/docs/Web/CSS/Reference
Do you prefer reading? Find written CSS docs on MDN: https://developer.mozilla.org/en-US/docs/Web/CSS
Common CSS Properties Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Properties_Reference
CSS Combinators: https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Combinators_and_multiple_selectors
More details on CSS Specifity: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity
Block level elements take 100 % width like <h1> tag.
Inline elements take the width its content needed. They do not have margin top/bottom.
Height of a tag element depends on its parent height. Use px instead of % .
Box-sizing is border-box, not content-box. We need width/height to accomdate for padding,border. Margin is not part of this.
display: inline-block. Child elements are behaving as inline. Their parent behaves as block kind (Eligibile for top/bottom rule).
On Inline elements, padding, margin, widht and height works differently. Check wiki.
z-index applied to elements that has some position value, not static. By default , its value is auto/0.
If two position  elements has same z-index, they follow same document flow. Element that comes first in HTML will be at bottom. Later elements will be on top.
For Fixed postion, positioning context is always viewport/html. For , absolute, it is nearest parents.
So, In theory, navnar, we can postion them fixed and all. For elements ann their content, relative and absolute.
For Fixed/absolute, their position context(top/left/right...) is determined by their parents.For relative, position context is current position.
When we apply overflow at body level, it goes to html level. apply at both..this way...any element with position :relative overflow(hidden) will be applied.
For position relative , if element goes out of parent block, apply overflow:hidden at parent level to hide the element.
Stacking Context : Parents level elments will compete using z-index. Child level z index will not interfere with parent level z-index.
Image size is adopted by its parents. Change parent/child height at same time. For % based height, child image follow parent height if parent has inline-block true.
